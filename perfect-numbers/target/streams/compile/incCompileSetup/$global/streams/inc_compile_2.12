format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/NumberType$.class
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/NumberType.class
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/PerfectNumbers$.class
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/PerfectNumbers.class
binary dependencies:
2 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> /Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> NumberType
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> NumberType$
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> PerfectNumbers
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> PerfectNumbers$
used names:
41 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> %
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> <
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> <init>
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> ==
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> >
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> A
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Abundant
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Any
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> AnyRef
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> B
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Boolean
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Deficient
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Either
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Enumeration
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Function1
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> IndexedSeq
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Int
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> IntIsIntegral
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Left
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> MatchError
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Nothing
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> NumberType
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Numeric
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Object
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Perfect
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> PerfectNumbers
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Predef
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Range
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> RichInt
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Right
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> String
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> Value
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> factors
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> filter
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> intWrapper
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> math
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> num
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> package
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> scala
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> sum
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> until
product stamps:
4 items
/Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/NumberType$.class -> lastModified(1501342376000)
/Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/NumberType.class -> lastModified(1501342376000)
/Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/PerfectNumbers$.class -> lastModified(1501342376000)
/Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/classes/PerfectNumbers.class -> lastModified(1501342376000)
source stamps:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> hash(55d8a56e29aabde838a5c37fca462ab6f82b2a51)
binary stamps:
2 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1466622116000)
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
class names:
2 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Enumeration
internal apis:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> 

external apis:
0 items
source infos:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/main/scala/PerfectNumbers.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXY74Vgh1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABLw==
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXY76nOR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABLw==
