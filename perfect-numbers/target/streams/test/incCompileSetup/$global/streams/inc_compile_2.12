format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/test-classes/PerfectNumbersTest.class
binary dependencies:
4 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> NumberType$
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbers$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbersTest
used names:
45 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <byname>
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <init>
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <repeated>
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> A
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Abundant
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Any
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> AnyShouldWrapper
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Assertion
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> B
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> BeWord
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Deficient
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Either
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> FunSuite
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Int
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Left
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Matcher
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Matchers
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Nothing
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> NumberType
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Perfect
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbers
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbersTest
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Position
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Predef
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Prettifier
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Right
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> String
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> T
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Tag
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Unit
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Value
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> apply
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> be
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> classify
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> convertToAnyShouldWrapper
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> default
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> here
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> org
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> package
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scala
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scalactic
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scalatest
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> should
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> source
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> test
product stamps:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/target/scala-2.12/test-classes/PerfectNumbersTest.class -> lastModified(1501342406000)
source stamps:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> hash(65e0b6eff20d7e82b682038bff2c836cf618ced2)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1466622116000)
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Int
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.source.Position$
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> 

external apis:
2 items
NumberType$ -> 

PerfectNumbers$ -> 

source infos:
1 items
/Users/alandevlin/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXY77D9x1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATy9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
