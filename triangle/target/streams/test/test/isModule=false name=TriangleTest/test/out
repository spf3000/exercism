[0m[[0minfo[0m] [0m[32mTriangleTest:[0m[0m
[0m[[0minfo[0m] [0m[32m- equilateral - true if all sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- equilateral - false if any side is unequal[0m[0m
[0m[[0minfo[0m] [0m[32m- equilateral - false if no sides are equal[0m[0m
[0m[[0minfo[0m] [0m[31m- equilateral - All zero sides are illegal, so the triangle is not equilateral *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.IllegalArgumentException: requirement failed[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.Predef$.require(Predef.scala:264)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Triangle.<init>(Triangle.scala:3)[0m[0m
[0m[[0minfo[0m] [0m[31m  at TriangleTest.$anonfun$new$4(TriangleTest.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32m- equilateral - sides may be floats[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - true if last two sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - true if first two sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - true if first and last sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - equilateral triangles are also isosceles[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - false if no sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - Sides that violate triangle inequality are not isosceles, even if two are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- isosceles - sides may be floats[0m[0m
[0m[[0minfo[0m] [0m[32m- scalene - true if no sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- scalene - false if all sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- scalene - false if two sides are equal[0m[0m
[0m[[0minfo[0m] [0m[32m- scalene - Sides that violate triangle inequality are not scalene, even if they are all different[0m[0m
[0m[[0minfo[0m] [0m[32m- scalene - sides may be floats[0m[0m
