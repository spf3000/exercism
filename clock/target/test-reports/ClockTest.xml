<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Alans-MBP.lan" name="ClockTest" tests="51" errors="0" failures="0" skipped="0" time="0.056">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib"/><property name="java.vm.version" value="25.102-b14"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/alandevlin/exercism/scala/clock"/><property name="java.runtime.version" value="1.8.0_102-b14"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/0y/0ct8w5nn2p338nf4r04_2krh0000gn/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/alandevlin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.12.6"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="user.home" value="/Users/alandevlin"/><property name="user.timezone" value="Europe/London"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/local/Cellar/sbt/0.13.15/libexec/bin/sbt-launch.jar"/><property name="user.name" value="alandevlin"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/0.13.15/libexec/bin/sbt-launch.jar"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_102"/><property name="java.ext.dirs" value="/Users/alandevlin/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="ClockTest" name="should construct from hour/min" time="0.036">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should construct from minutes" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should implement equals" time="0.009">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should support wraparound" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle hour rolls over continuously" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should implement 60 min as the next hour" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should construct consistently between constructors" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should support rolling over minutes" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle minutes rolling over consistently" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should support rolling over both hours and minutes" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle hours and minutes rolling over consistently" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle hours and minutes rolling over to midnight" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle rolling over negative hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative hours rolling over consistently" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative minute" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle rolling over negative minute" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative minutes rolling over consistently" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative hour and minutes roll over" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle negative hour and minutes rolling over consistently" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add minutes" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add no minutes" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add to next hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add more than one hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add more than two hours with carry" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add across midnight" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add more than one day (1500 min == 25 hours)" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should add more than 2 days" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract minutes" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract to previous hour" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract more than an hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract across midnight" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract more than two hours" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract more than two hours with borrow" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract more than one day (1500 min = 25 hrs)" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should subtract more than two days" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with same time" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks that are one minute apart" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks that are one hour apart" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with hour overflow" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with hour overflow by several days" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative hour" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative hour that wraps" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative hour that wraps multiple times" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with minute overflow" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with minute overflow by several days" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative minute" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative minute that wraps" time="0.001">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative minute that wraps mutiple times" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative hours and minute" time="0.0">
                                                 
                                               </testcase><testcase classname="ClockTest" name="should handle equality of clocks with negative hours and minute that wrap" time="0.0">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>