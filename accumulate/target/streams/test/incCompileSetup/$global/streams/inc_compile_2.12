format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/alandevlin/exercism/scala/accumulate/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> /Users/alandevlin/exercism/scala/accumulate/target/scala-2.12/test-classes/AccumulateTest.class
binary dependencies:
4 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> /Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Accumulate
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> AccumulateTest
used names:
59 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> *
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> <byname>
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> <init>
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> <repeated>
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> A
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Accumulate
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> AccumulateTest
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Any
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> AnyShouldWrapper
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Assertion
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> B
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> BeWord
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> CanBuildFrom
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Char
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> FlatSpec
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Function1
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Int
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> ItVerbString
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> ItWord
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> List
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Matcher
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Matchers
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Nothing
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Position
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Predef
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Prettifier
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> RichChar
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> String
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> StringCanBuildFrom
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> StringOps
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> T
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> That
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> Unit
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> accumulate
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> accumulation
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> apply
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> augmentString
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> be
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> charWrapper
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> collection
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> convertToAnyShouldWrapper
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> default
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> empty
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> here
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> immutable
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> in
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> it
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> map
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> org
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> package
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> reverse
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> scala
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> scalactic
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> scalatest
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> should
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> source
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> toString
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> toUpper
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> x
product stamps:
1 items
/Users/alandevlin/exercism/scala/accumulate/target/scala-2.12/test-classes/AccumulateTest.class -> lastModified(1500831289000)
source stamps:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> hash(cca9c59dbd575ad416c9b7709af28a72f2e408ce)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1466622116000)
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.collection.immutable.List$
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Prettifier
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.FlatSpec
internal apis:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> 

external apis:
1 items
Accumulate -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwOr2I9wAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwePuljHQABm5vdGlmeXNxAH4ADKCoziV0AAphY2N1bXVsYXRlc3EAfgAMziBOZHQABHdhaXRzcQB+AAwFh4NLdAANJGFzSW5zdGFuY2VPZnNxAH4ADHpCdHx0AAZlcXVhbHNzcQB+AAz5xB8fdAAMYXNJbnN0YW5jZU9mc3EAfgAMBH5u63QADHN5bmNocm9uaXplZHNxAH4ADEPK/xd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMzIkQxnQACW5vdGlmeUFsbHNxAH4ADF7hDSd0AAxpc0luc3RhbmNlT2ZzcQB+AAyNSe6DdAAGPGluaXQ+c3EAfgAMVab23XQAAj09c3EAfgAMTRBQxnQABWNsb25lc3EAfgAMHFNIqXQACHRvU3RyaW5nc3EAfgAMjMC6wXQAAiE9c3EAfgAMsAuok3QACGdldENsYXNzc3EAfgAMcDqjK3QAAm5lc3EAfgAM3UG0onQACkFjY3VtdWxhdGVzcQB+AAz7yz4BdAACZXFzcQB+AAx++gbkdAACIyNzcQB+AAyv7mQCdAAIZmluYWxpemVzcQB+AAzNV1tndAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ADF1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AWnNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AF9zcQB+AFp1cQB+AD4AAAAAc3EAfgBadXEAfgA+AAAAAHNxAH4AWnVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AXnQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AXnNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4Ad3QABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeHNxAH4Aa3QAA0FueXNxAH4Ab3NxAH4AcnVxAH4AdQAAAAJzcQB+AHd0AAVzY2FsYXEAfgB+dXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV1wg7hldXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARS9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL2FjY3VtdWxhdGUvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEYKB8ss7Hy0CkdCEIXc9zvOgGLY
source infos:
1 items
/Users/alandevlin/exercism/scala/accumulate/src/test/scala/AccumulateTest.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXXCD0F91cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL2FjY3VtdWxhdGUvdGFyZ2V0L3NjYWxhLTIuMTIvdGVzdC1jbGFzc2VzdAABLw==
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXXCECS51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL2FjY3VtdWxhdGUvdGFyZ2V0L3NjYWxhLTIuMTIvdGVzdC1jbGFzc2VzdAABLw==
