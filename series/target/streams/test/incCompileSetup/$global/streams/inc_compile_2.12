format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/alandevlin/exercism/scala/series/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> /Users/alandevlin/exercism/scala/series/target/scala-2.12/test-classes/SeriesTest.class
binary dependencies:
3 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> /Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> /Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Series$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> SeriesTest
used names:
41 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> <byname>
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> <init>
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> <repeated>
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> A
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Any
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> AnyShouldWrapper
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Assertion
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> BeWord
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> FunSuite
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> IndexedSeq
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Int
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> List
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Matcher
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Matchers
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Nil
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Nothing
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Position
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Predef
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Prettifier
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Series
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> SeriesTest
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> String
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> T
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Tag
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> Unit
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> apply
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> be
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> collection
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> convertToAnyShouldWrapper
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> default
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> here
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> immutable
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> org
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> package
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> scala
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> scalactic
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> scalatest
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> should
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> slices
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> source
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> test
product stamps:
1 items
/Users/alandevlin/exercism/scala/series/target/scala-2.12/test-classes/SeriesTest.class -> lastModified(1502798248000)
source stamps:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> hash(bdd00f2f33b03a3c1223b84fba7251ac645bdc5c)
binary stamps:
3 items
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
3 items
/Users/alandevlin/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Predef$
/Users/alandevlin/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Prettifier
/Users/alandevlin/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.FunSuite
internal apis:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> 

external apis:
1 items
Series$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw+ikYXAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwxKDZD3QABm5vdGlmeXNxAH4ADMWESpN0AAR3YWl0c3EAfgAMwWqNm3QADSRhc0luc3RhbmNlT2ZzcQB+AAyOZJPAdAAGU2VyaWVzc3EAfgAM5kJqrnQABmVxdWFsc3NxAH4ADF1e74l0AAxhc0luc3RhbmNlT2ZzcQB+AAz5QkksdAAMc3luY2hyb25pemVkc3EAfgAMynCvenQADSRpc0luc3RhbmNlT2ZzcQB+AAy+49QXdAAJbm90aWZ5QWxsc3EAfgAMsyHBinQADGlzSW5zdGFuY2VPZnNxAH4ADOVIMVZ0AAI9PXNxAH4ADCUspp50AAVjbG9uZXNxAH4ADFublnd0AAh0b1N0cmluZ3NxAH4ADADQSZp0AAIhPXNxAH4ADC1B2/B0AAZzbGljZXNzcQB+AAwlH1bEdAAIZ2V0Q2xhc3NzcQB+AAw9VA13dAACbmVzcQB+AAy1gb1edAACZXFzcQB+AAwcdUk0dAACIyNzcQB+AAwLB0HndAAIZmluYWxpemVzcQB+AAzxOStDdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ABV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFhzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQUwACWluaGVyaXRlZHEAfgBBTAAHcGFyZW50c3EAfgBBeHEAfgBdc3EAfgBYdXEAfgA8AAAAAHNxAH4AWHVxAH4APAAAAABzcQB+AFh1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AFx0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AFxzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHV0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHZzcQB+AGl0AANBbnlzcQB+AG1zcQB+AHB1cQB+AHMAAAACc3EAfgB1dAAFc2NhbGFxAH4AfHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFd5cF3eHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AEEvVXNlcnMvYWxhbmRldmxpbi9leGVyY2lzbS9zY2FsYS9zZXJpZXMvdGFyZ2V0L3NjYWxhLTIuMTIvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEZSTPU6/MuKd7NO7EQe02qhfuOM
source infos:
1 items
/Users/alandevlin/exercism/scala/series/src/test/scala/SeriesTest.scala -> 
AAAAAAAAAAA=
compilations:
8 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW6l211cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW653R1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW7zkx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW8NVp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW9FCJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW+UQx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
6 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeW+p0p1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
7 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABXeXBeJJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQARi9Vc2Vycy9hbGFuZGV2bGluL2V4ZXJjaXNtL3NjYWxhL3Nlcmllcy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
